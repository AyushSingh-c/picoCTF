understand func1 -> arg0 in w0
    store stack with 48 bytes
    w0 -> sp+28
    0 -> sp+44
    goto L2
        [sp+28] -> w0<----------------------------------------------
        if w0 != 0                                                 |
            goto L4                                                |
                w0 <- [sp+28]                                      |
                w0 <- w0 & 1                                       |
                if w0 == 0                                         |
                    goto L3                                        |
                        w0 <- [sp+28]<-------------------          |
                        w0 <- w0>>1                     |          |
                        w0 -> [sp+28]                   |          |
                        goto L2-------------------------|-----------
                w0 <- [sp+44]                           |
                call func2                              |
                w0 -> [sp+44]                           |
                goto L3 ---------------------------------
        w0 <- [sp+44]
        x29 <- [sp]
        x30 <- [sp+8]
        sp <- sp+16
        ret
    summary 
        finally stored 3*(no. of 1s in the binary repre of w0) in w0 


understand func2
    sp <- sp-16
    w0 -> sp+12
    w0 <- [sp+12]
    w0 <- w0+3
    sp <- sp+16
    ret
    summary
        simply add 3 to w0


understanding main
    take an argument and sent to func1 in x1 as int and prints whatever comes in w0

flag - picoCTF{00000030}